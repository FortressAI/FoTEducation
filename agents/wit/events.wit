package fot:events;

world events_api {
  import events {
    publish: func(topic: string, message: string) -> result<(), u32>;
    subscribe: func(topic: string) -> result<u64, u32>;
    unsubscribe: func(subscription: u64) -> result<(), u32>;
    notify: func(user_id: string, message: string) -> result<(), u32>;
    
    // HARMONIC RESONANCE EVENTS
    emit_resonance: func(agent_id: string, frequency: f64, amplitude: f64, context: string) -> result<(), u32>;
    broadcast_harmonic: func(resonance_data: string) -> result<(), u32>;
    subscribe_resonance: func(frequency_range: string) -> result<u64, u32>;
    measure_collective_resonance: func(agent_cluster: string) -> result<f64, u32>;
  }
  export event_handler: func(event: string) -> string;
}
