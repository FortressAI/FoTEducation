@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix fot: <https://fot.education/schema#> .
@prefix ex: <https://fot.education/id/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# FoT Claim Validation Shape
ex:ClaimShape a sh:NodeShape ;
  sh:targetClass fot:Claim ;
  sh:property [
    sh:path fot:state ;
    sh:in ("superposed" "true" "false") ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
  ] ;
  sh:property [
    sh:path fot:about ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:class fot:Concept ;
  ] ;
  sh:property [
    sh:path fot:confidence ;
    sh:datatype xsd:double ;
    sh:minInclusive 0.0 ;
    sh:maxInclusive 1.0 ;
  ] ;
  sh:property [
    sh:path fot:requiresVirtue ;
    sh:minCount 1 ;
    sh:class fot:Virtue ;
  ] .

# Superposed Claim Requirements
ex:SuperposedClaimShape a sh:NodeShape ;
  sh:targetClass fot:Claim ;
  sh:filter [
    sh:property [
      sh:path fot:state ;
      sh:hasValue "superposed" ;
    ] ;
  ] ;
  sh:property [
    sh:path fot:hasProvenance ;
    sh:minCount 1 ;
    sh:datatype xsd:anyURI ;
  ] .

# Verified Claim Requirements
ex:VerifiedClaimShape a sh:NodeShape ;
  sh:targetClass fot:Claim ;
  sh:filter [
    sh:or (
      [ sh:property [ sh:path fot:state ; sh:hasValue "true" ] ]
      [ sh:property [ sh:path fot:state ; sh:hasValue "false" ] ]
    ) ;
  ] ;
  sh:property [
    sh:path fot:verifiedBy ;
    sh:minCount 1 ;
    sh:class fot:Agent ;
  ] ;
  sh:property [
    sh:path fot:measurementLog ;
    sh:minCount 1 ;
    sh:datatype xsd:string ;
  ] .

# Student Learning Edge Validation
ex:StudentLearningShape a sh:NodeShape ;
  sh:targetClass fot:learns ;
  sh:property [
    sh:path fot:mastery ;
    sh:datatype xsd:double ;
    sh:minInclusive 0.0 ;
    sh:maxInclusive 1.0 ;
  ] ;
  sh:property [
    sh:path fot:curiosity ;
    sh:datatype xsd:double ;
    sh:minInclusive 0.0 ;
    sh:maxInclusive 1.0 ;
  ] ;
  sh:property [
    sh:path fot:patience ;
    sh:datatype xsd:double ;
    sh:minInclusive 0.0 ;
    sh:maxInclusive 1.0 ;
  ] ;
  sh:property [
    sh:path fot:honesty ;
    sh:datatype xsd:double ;
    sh:minInclusive 0.0 ;
    sh:maxInclusive 1.0 ;
  ] .

# Domain Link Validation
ex:DomainLinkShape a sh:NodeShape ;
  sh:targetClass fot:DomainLink ;
  sh:property [
    sh:path fot:source ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:class fot:Concept ;
  ] ;
  sh:property [
    sh:path fot:target ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:class fot:Concept ;
  ] ;
  sh:property [
    sh:path fot:linkType ;
    sh:in ("analogy" "prerequisite" "entails" "contradicts") ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
  ] .
